# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: # when to run the workflow
  push: # when pushing to main branch
    branches: [ "main" ]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  pull_request: # when pushing to a main
    branches: [ "main" ]

permissions:
  contents: read

jobs: # what to do
  build: # name of our only job for now
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-12 ]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps: # specific actions to take
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Gradle Dist
        dist: ./gradlew dist

      - name: Gradle Build Action
        # You may pin to the exact commit or the version.
        # uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef
        uses: gradle/gradle-build-action@v2.3.3
        with:
          # Gradle version to use
          # gradle-version: # optional
          # When 'true', all caching is disabled. No entries will be written to or read from the cache.
          # cache-disabled: # optional
          # When 'true', existing entries will be read from the cache but no entries will be written.
          #     By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches.

          # cache-read-only: # optional, default is ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}
          # When 'true', entries will not be restored from the cache but will be saved at the end of the Job.
          #     Setting this to 'true' implies cache-read-only will be 'false'.

          # cache-write-only: # optional
          # Paths within Gradle User Home to cache.
          # gradle-home-cache-includes: # optional, default is caches
          #     notifications

          # Paths within Gradle User Home to exclude from cache.
          # gradle-home-cache-excludes: # optional
          # Gradle command line arguments (supports multi-line input)
          # arguments: # optional
          # Path to the root directory of the build
          arguments: build jacocoTestReport
          build-root-directory: ENG1
          # Path to the Gradle executable
          # gradle-executable: # optional
          # When 'false', no Job Summary will be generated for the Job.
          # generate-job-summary: # optional, default is true
          # When 'true', the action will not attempt to restore the Gradle User Home entries from other Jobs.
          # gradle-home-cache-strict-match: # optional
          # Used to uniquely identify the current job invocation. Defaults to the matrix values for this job; this should not be overridden by users (INTERNAL).
          # workflow-job-context: # optional, default is ${{ toJSON(matrix) }}
          # When 'true', the action will attempt to remove any stale/unused entries from the Gradle User Home prior to saving to the GitHub Actions cache.
          # gradle-home-cache-cleanup: # optional


      - name: Upload JaCoCO coverage report # as a workflow artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: jacoco-report-${{ matrix.os }}
          path: ENG1/tests/build/reports/tests/test/index.html

      # Add binary artifacts - Adding JAR upload to GHA workflow
      - name: Upload library JAR
        uses: actions/upload-artifact@v3.1.1
        with:
          name: lib-${{ matrix.os }}.jar
          path: ENG1/desktop/build/libs/*.jar
      - name: Upload Checkstyle report
        uses: actions/upload-artifact@v3.1.1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: checkstyle-report
          path: ENG1/core/build/reports/checkstyle
  release:
    runs-on: ubuntu-22.04
    needs: ["build"]
    if: startsWith(github.ref,'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Download Ubuntu Build Artifact
        uses: actions/download-artifact@v3.0.1
        with: {name: lib-ubuntu-22.04.jar}
      - name: Rename Ubuntu Build Artifact
        run: mv desktop*.jar lib-ubuntu.jar
      - name: Download MacOS Build Artifact
        uses: actions/download-artifact@v3.0.1
        with: { name: lib-macos-12.jar }
      - name: Rename MacOS Build Artifact
        run: mv desktop*.jar lib-macos.jar
      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3.0.1
        with: { name: lib-windows-2022.jar }
      - name: Rename Windows Build Artifact
        run: mv desktop*.jar lib-windows.jar
      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with: {files: lib*.jar}
